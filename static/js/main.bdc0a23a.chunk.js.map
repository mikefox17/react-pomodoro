{"version":3,"sources":["App.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","timeLeft","setTimeLeft","title","setTitle","isRunning","setIsRunning","intervalRef","useRef","minutes","Math","floor","seconds","className","onClick","current","setInterval","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAGA,SAASA,EAAQC,GACb,OAAOA,EAAKC,WAAWC,SAAS,EAAG,KAiFxBC,MA9Ef,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACJC,EADI,KACMC,EADN,OAEeF,mBAAS,YAFxB,mBAEJG,EAFI,KAEGC,EAFH,OAGuBJ,oBAAS,GAHhC,mBAGJK,EAHI,KAGOC,EAHP,KAKPC,EAAcC,iBAAO,MA+BnBC,EAAUd,EAAQe,KAAKC,MAAMV,EAAW,KACxCW,EAAUjB,EAAQM,EAAqB,GAAVQ,GAEnC,OACI,sBAAKI,UAAU,kCAAf,UACI,oBAAIA,UAAU,+CAAd,SACKV,IAEL,sBAAKU,UAAU,wDAAf,UACI,+BAAOJ,IACP,qCACA,+BAAOG,OAEX,sBAAKC,UAAU,gCAAf,WACMR,GACE,wBACIS,QA7CpB,WACIR,GAAa,GACe,OAAxBC,EAAYQ,UAEhBR,EAAYQ,QAAUC,aAAY,WAC9Bd,GAAY,SAAAD,GAER,OADAG,EAAS,uBACLH,GAAY,EACLA,EAAW,EACR,OAEnB,OAmCaY,UAAU,oFAFd,mBAOHR,GACG,wBACIS,QAvCpB,WACgC,OAAxBP,EAAYQ,UAEhBE,cAAcV,EAAYQ,SAC1BR,EAAYQ,QAAU,KACtBX,EAAS,eACTE,GAAa,KAkCGO,UAAU,oFAFd,kBAQJ,wBACIC,QAtChB,WACIV,EAAS,YACTF,EAAY,IACZK,EAAYQ,QAAU,MAoCVF,UAAU,oFAFd,0BCrEhBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.bdc0a23a.chunk.js","sourcesContent":["import './index.css';\nimport React, { useState, useRef } from 'react';\n\nfunction padTime(time) {\n    return time.toString().padStart(2, '0');\n}\n\nfunction App() {\n    const [timeLeft, setTimeLeft] = useState(10);\n    const [title, setTitle] = useState('Pomodoro');\n    const [isRunning, setIsRunning] = useState(false);\n\n    let intervalRef = useRef(null);\n\n    function startTimer() {\n        setIsRunning(true);\n        if (intervalRef.current !== null) return;\n\n        intervalRef.current = setInterval(() => {\n            setTimeLeft(timeLeft => {\n                setTitle('Countdown had begun');\n                if (timeLeft >= 1) {\n                    return timeLeft - 1;\n                } else return 0;\n            });\n        }, 1000);\n    }\n\n    function stopTimer() {\n        if (intervalRef.current === null) return;\n\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n        setTitle('Keep it up!');\n        setIsRunning(false);\n    }\n\n    function resetTimer() {\n        setTitle('Pomodoro');\n        setTimeLeft(10);\n        intervalRef.current = null;\n    }\n\n    const minutes = padTime(Math.floor(timeLeft / 60));\n    const seconds = padTime(timeLeft - minutes * 60);\n\n    return (\n        <div className='px-10 mx-auto py-20 bg-gray-100'>\n            <h2 className='text-center text-4xl font-bold text-gray-400'>\n                {title}\n            </h2>\n            <div className='timer mb-10 text-6xl text-green-400 text-center mt-10'>\n                <span>{minutes}</span>\n                <span>:</span>\n                <span>{seconds}</span>\n            </div>\n            <div className='buttons space-x-4 text-center'>\n                {!isRunning && (\n                    <button\n                        onClick={startTimer}\n                        className='px-6 py-2 bg-blue-400 rounded text-blue-100 hover:bg-blue-300 hover:text-blue-500'\n                    >\n                        Start\n                    </button>\n                )}\n                {isRunning && (\n                    <button\n                        onClick={stopTimer}\n                        className='px-6 py-2 bg-blue-400 rounded text-blue-100 hover:bg-blue-300 hover:text-blue-500'\n                    >\n                        Stop\n                    </button>\n                )}\n\n                <button\n                    onClick={resetTimer}\n                    className='px-6 py-2 bg-blue-400 rounded text-blue-100 hover:bg-blue-300 hover:text-blue-500'\n                >\n                    Reset\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}